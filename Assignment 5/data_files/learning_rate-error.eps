%!PS-Adobe-2.0 EPSF-2.0
%%Title: learning_rate-error.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon Nov 23 23:28:51 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
%
/vshift -50 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (learning_rate-error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (William Richard)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 23 23:28:51 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 150 scalefont setfont
1.000 UL
LTb
1005 480 M
63 0 V
5907 0 R
-63 0 V
915 480 M
( 0) Rshow
1.000 UL
LTb
1005 1067 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.05) Rshow
1.000 UL
LTb
1005 1654 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.1) Rshow
1.000 UL
LTb
1005 2241 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.15) Rshow
1.000 UL
LTb
1005 2829 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.2) Rshow
1.000 UL
LTb
1005 3416 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.25) Rshow
1.000 UL
LTb
1005 4003 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.3) Rshow
1.000 UL
LTb
1005 4590 M
63 0 V
5907 0 R
-63 0 V
-5997 0 R
( 0.35) Rshow
1.000 UL
LTb
1005 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0) Cshow
1.000 UL
LTb
2090 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0.02) Cshow
1.000 UL
LTb
3176 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0.04) Cshow
1.000 UL
LTb
4261 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0.06) Cshow
1.000 UL
LTb
5347 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0.08) Cshow
1.000 UL
LTb
6432 480 M
0 63 V
0 4047 R
0 -63 V
0 -4197 R
( 0.1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1005 4590 N
0 -4110 V
5970 0 V
0 4110 V
-5970 0 V
Z stroke
LCb setrgbcolor
300 2535 M
currentpoint gsave translate 90 rotate 0 0 M
(Error) Cshow
grestore
LTb
LCb setrgbcolor
3990 105 M
(Learning Rate) Cshow
LTb
3990 4815 M
(Error vs Learning Rate) Cshow
1.000 UP
1.000 UL
LTb
1.000 UL
LT3
LTb
6282 4452 M
(Without Bias Node) Rshow
LT3
1548 2763 Box
1548 2692 Box
1548 2729 Box
1548 2764 Box
1548 2873 Box
1548 4265 Box
1548 2752 Box
1548 2894 Box
1548 2734 Box
1548 2721 Box
1548 2616 Box
1548 2945 Box
1548 3269 Box
1548 3196 Box
1548 3182 Box
2090 2421 Box
2090 2348 Box
2090 2358 Box
2090 2160 Box
2090 2370 Box
2090 3303 Box
2090 2303 Box
2090 2362 Box
2090 2204 Box
2090 2393 Box
2090 2247 Box
2090 2365 Box
2090 2573 Box
2090 2618 Box
2090 2661 Box
2633 2245 Box
2633 2219 Box
2633 2172 Box
2633 1936 Box
2633 2091 Box
2633 2709 Box
2633 2046 Box
2633 2110 Box
2633 2004 Box
2633 2139 Box
2633 2157 Box
2633 2088 Box
2633 2475 Box
2633 2266 Box
2633 2276 Box
3176 2038 Box
3176 2120 Box
3176 2009 Box
3176 1841 Box
3176 1916 Box
3176 2568 Box
3176 1911 Box
3176 1960 Box
3176 1973 Box
3176 1968 Box
3176 1890 Box
3176 1987 Box
3176 2448 Box
3176 2140 Box
3176 2132 Box
3719 1907 Box
3719 1972 Box
3719 1925 Box
3719 1869 Box
3719 1856 Box
3719 2506 Box
3719 1868 Box
3719 1942 Box
3719 2012 Box
3719 1931 Box
3719 1855 Box
3719 1913 Box
3719 2262 Box
3719 2007 Box
3719 2038 Box
4261 1844 Box
4261 1819 Box
4261 1839 Box
4261 1879 Box
4261 1827 Box
4261 2740 Box
4261 1860 Box
4261 1903 Box
4261 1995 Box
4261 1852 Box
4261 1868 Box
4261 1861 Box
4261 2116 Box
4261 1949 Box
4261 1948 Box
4804 1791 Box
4804 1772 Box
4804 1770 Box
4804 1831 Box
4804 1799 Box
4804 2563 Box
4804 1850 Box
4804 1866 Box
4804 1931 Box
4804 1852 Box
4804 1838 Box
4804 1938 Box
4804 1930 Box
4804 1877 Box
4804 1895 Box
5347 1773 Box
5347 1744 Box
5347 1781 Box
5347 1797 Box
5347 1783 Box
5347 2547 Box
5347 1817 Box
5347 1849 Box
5347 1841 Box
5347 1815 Box
5347 1816 Box
5347 1924 Box
5347 1964 Box
5347 1817 Box
5347 1836 Box
5890 1783 Box
5890 1720 Box
5890 1744 Box
5890 1732 Box
5890 1814 Box
5890 2438 Box
5890 1811 Box
5890 2077 Box
5890 1833 Box
5890 1791 Box
6432 1781 Box
6432 1715 Box
6432 1732 Box
6432 1691 Box
6432 1807 Box
6432 2160 Box
6432 1820 Box
6432 2054 Box
6432 1853 Box
6432 1782 Box
6583 4452 Box
1.000 UL
LT2
LTb
6282 4302 M
(With Bias Node) Rshow
LT2
1548 2765 Star
1548 2797 Star
1548 2904 Star
1548 2773 Star
1548 2784 Star
1548 2642 Star
1548 4490 Star
1548 2856 Star
1548 2933 Star
1548 2731 Star
1548 2765 Star
1548 2868 Star
1548 3599 Star
1548 3077 Star
1548 2904 Star
2090 2478 Star
2090 2330 Star
2090 2403 Star
2090 2282 Star
2090 2225 Star
2090 2291 Star
2090 3156 Star
2090 2321 Star
2090 2383 Star
2090 2362 Star
2090 2119 Star
2090 2332 Star
2090 2993 Star
2090 2629 Star
2090 2388 Star
2633 2318 Star
2633 2089 Star
2633 2223 Star
2633 2068 Star
2633 2020 Star
2633 2083 Star
2633 3234 Star
2633 2019 Star
2633 2044 Star
2633 2166 Star
2633 1946 Star
2633 2055 Star
2633 2572 Star
2633 2342 Star
2633 2133 Star
3176 2058 Star
3176 1951 Star
3176 2014 Star
3176 1980 Star
3176 1874 Star
3176 1964 Star
3176 3547 Star
3176 1905 Star
3176 1920 Star
3176 2016 Star
3176 1885 Star
3176 2019 Star
3176 2263 Star
3176 2055 Star
3176 2106 Star
3719 1904 Star
3719 1882 Star
3719 1873 Star
3719 1922 Star
3719 1800 Star
3719 1841 Star
3719 3279 Star
3719 1811 Star
3719 1907 Star
3719 1964 Star
3719 1844 Star
3719 1941 Star
3719 2022 Star
3719 1920 Star
3719 1973 Star
4261 1813 Star
4261 1847 Star
4261 1828 Star
4261 1880 Star
4261 1775 Star
4261 1846 Star
4261 2796 Star
4261 1835 Star
4261 1907 Star
4261 1917 Star
4261 1852 Star
4261 1895 Star
4261 1976 Star
4261 1853 Star
4261 1921 Star
4804 1786 Star
4804 1822 Star
4804 1786 Star
4804 1844 Star
4804 1787 Star
4804 1850 Star
4804 2546 Star
4804 1846 Star
4804 1902 Star
4804 1899 Star
4804 1870 Star
4804 1861 Star
4804 1834 Star
4804 1800 Star
4804 1875 Star
5347 1770 Star
5347 1769 Star
5347 1771 Star
5347 1821 Star
5347 1829 Star
5347 1819 Star
5347 2691 Star
5347 1820 Star
5347 1853 Star
5347 1829 Star
5347 1836 Star
5347 1846 Star
5347 1799 Star
5347 1799 Star
5347 1844 Star
5890 1771 Star
5890 1740 Star
5890 1747 Star
5890 1793 Star
5890 1857 Star
5890 1802 Star
5890 2493 Star
5890 1792 Star
5890 1811 Star
5890 1800 Star
5890 1794 Star
5890 1849 Star
5890 1820 Star
5890 1843 Star
5890 1798 Star
6432 1716 Star
6432 1740 Star
6432 1701 Star
6432 1795 Star
6432 1833 Star
6432 1795 Star
6432 2550 Star
6432 1770 Star
6432 1777 Star
6432 1801 Star
6432 1758 Star
6432 1784 Star
6432 1771 Star
6432 1811 Star
6432 1757 Star
6583 4302 Star
1.000 UL
LTb
1005 4590 N
0 -4110 V
5970 0 V
0 4110 V
-5970 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
